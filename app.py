# 🔵 Ψηφιακό Πρόγραμμα για Δίκαιη Κατανομή Μαθητών στην Α' Δημοτικού
# ------------------------------------------------------------
# Περιγραφή:
# Το πρόγραμμα υλοποιεί δίκαιη κατανομή μαθητών σε τμήματα Α' Δημοτικού.
# Υποστηρίζει 2 ή περισσότερα τμήματα, με μέγιστο 25 μαθητές ανά τάξη
# και διαφορά πληθυσμού έως 1 μεταξύ των τμημάτων.
# Τα δεδομένα φορτώνονται και εξάγονται μέσω αρχείων Excel.
# Γλώσσα προγραμματισμού: Python
# Χρήση πλατφορμών: GitHub για αποθήκευση, Streamlit για προβολή/χρήση

# ✅ ΚΩΔΙΚΟΠΟΙΗΣΗ ΠΕΔΙΩΝ
# Φύλο: Α = Αγόρι, Κ = Κορίτσι
# Πεδίο | Ν = Έχει / Ο = Δεν Έχει
# Καλή Γνώση Ελληνικών         | Ν = Καλή / Ο = Όχι Καλή
# Ικανοποιητική Μ. Ικανότητα   | Ν = Ικανοποιητική / Ο = Δυσκολία
# Ζωηρός                      | Ν = Ζωηρός / Ο = Ήσυχος
# Ιδιαιτερότητα               | Ν = Έχει / Ο = Δεν Έχει
# Παιδί Εκπαιδευτικού         | Ν = Είναι / Ο = Δεν Είναι

# 📌 Κάθε παιδί αξιολογείται με βάση έως 8 ταμπέλες (χαρακτηριστικά), που αντιστοιχούν στις στήλες του Excel.
# 📌 Σε κάθε βήμα λαμβάνεται υπόψη και η πιθανή σύγκρουση πριν γίνει τοποθέτηση.
# 📌 Τα παιδιά “κλειδώνουν” μετά την ολοκλήρωση των πρώτων τεσσάρων (4) βημάτων και δεν μετακινούνται στη συνέχεια.
# 📌 Το μέγιστο όριο ανά τμήμα είναι 25 μαθητές και η διαφορά μεγέθους μεταξύ τμημάτων το πολύ 1 μαθητής.

import streamlit as st
import pandas as pd
import math
from io import BytesIO

# ➤ Κλείδωμα πρόσβασης με κωδικό
st.sidebar.title("🔐 Κωδικός Πρόσβασης")
password = st.sidebar.text_input("Εισάγετε τον κωδικό:", type="password")
if password != "katanomi2025":
    st.warning("❌ Λάθος κωδικός. Η πρόσβαση δεν επιτρέπεται.")
    st.stop()

# ➤ Ενεργοποίηση/Απενεργοποίηση Εφαρμογής
enable_app = st.sidebar.checkbox("✅ Ενεργοποίηση Εφαρμογής", value=True)
if not enable_app:
    st.info("🔒 Η εφαρμογή είναι προσωρινά απενεργοποιημένη.")
    st.stop()

# ➤ Νομική Προστασία
st.sidebar.markdown("---")
st.sidebar.markdown("© 2025 Παναγιώτα Γιαννίτσαρου | Όλα τα δικαιώματα διατηρούνται.")
st.sidebar.markdown("Η χρήση της εφαρμογής επιτρέπεται μόνο με ρητή γραπτή άδεια της δημιουργού.")

# ➤ Υπολογισμός Αριθμού Τμημάτων (Βήμα: Ισορροπία Πληθυσμού)
def υπολογισμος_τμηματων(df):
    συνολο = len(df)
    τμηματα = math.ceil(συνολο / 25)
    return τμηματα

# 📌 Κουμπιά Streamlit για τις βασικές λειτουργίες
st.title("📊 Κατανομή Μαθητών Α' Δημοτικού")

uploaded_file = st.file_uploader("🔹 Εισαγωγή Excel αρχείου μαθητών", type=[".xls", ".xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    st.success("✅ Το αρχείο φορτώθηκε επιτυχώς.")
    st.dataframe(df.head())

    if st.button("🔹 Κατανομή Μαθητών"):
        num_classes = υπολογισμος_τμηματων(df)
        st.info(f"📌 Υπολογίστηκαν {num_classes} τμήματα για {len(df)} μαθητές (μέγιστο 25 ανά τμήμα).")
        # Εδώ θα προστεθεί η λογική κατανομής

    if st.button("🔹 Εξαγωγή Excel Αποτελέσματος"):
        # Εδώ θα προστεθεί η εξαγωγή σε Excel
        output = BytesIO()
        df.to_excel(output, index=False)
        output.seek(0)
        st.download_button("📥 Κατέβασε το αρχείο Excel", data=output, file_name="katanomi.xlsx")

    if st.button("📊 Προβολή Στατιστικών Στοιχείων"):
        if 'ΤΜΗΜΑ' not in df.columns:
            st.error("⚠️ Δεν υπάρχει στήλη 'ΤΜΗΜΑ' στο αρχείο.")
        else:
            stats = df.groupby('ΤΜΗΜΑ').agg({
                'ΦΥΛΟ': [
                    ('Αγόρια', lambda x: (x == 'Α').sum()),
                    ('Κορίτσια', lambda x: (x == 'Κ').sum())
                ],
                'ΠΑΙΔΙ ΕΚΠΑΙΔΕΥΤΙΚΟΥ': ('Παιδιά Εκπαιδευτικών', lambda x: (x == 'Ν').sum()),
                'ΖΩΗΡΟΣ': ('Ζωηροί', lambda x: (x == 'Ν').sum()),
                'ΙΔΙΑΙΤΕΡΟΤΗΤΑ': ('Ιδιαιτερότητα', lambda x: (x == 'Ν').sum()),
                'ΚΑΛΗ ΓΝΩΣΗ ΕΛΛΗΝΙΚΩΝ': ('Καλή Γν. Ελληνικών', lambda x: (x == 'Ν').sum()),
                'ΙΚΑΝΟΠΟΙΗΤΙΚΗ ΜΑΘΗΣΙΑΚΗ ΙΚΑΝΟΤΗΤΑ': ('Μαθησιακά Ικανοί', lambda x: (x == 'Ν').sum()),
                'ΟΝΟΜΑΤΕΠΩΝΥΜΟ': ('Σύνολο Μαθητών', 'count')
            })

            stats.columns = stats.columns.droplevel(0)

            total_row = stats.sum(numeric_only=True)
            total_row.name = 'Σύνολο'
            stats = pd.concat([stats, total_row.to_frame().T])

            st.dataframe(stats)

            output_stats = BytesIO()
            stats.to_excel(output_stats)
            output_stats.seek(0)
            st.download_button("📥 Κατέβασε Στατιστικά σε Excel", data=output_stats, file_name="statistika_tmimata.xlsx")
else:
    st.warning("📂 Παρακαλώ εισάγετε πρώτα ένα αρχείο Excel.")
